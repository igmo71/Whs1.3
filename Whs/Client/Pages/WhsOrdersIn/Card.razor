@using Whs.Shared.Models
<!--
<div class="card border border-dark rounded w-100">
    <div class="card-header">
        <div class="row  d-flex justify-content-around">
            <span><span class="oi oi-list" title="Количество строк"></span>&nbsp;<span class="h4">@Value.КоличествоСтрок</span></span>
            <span><span class="oi oi-expand-down" title="Вес"></span>&nbsp;<span class="h4">@Value.Вес</span></span>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <span class="oi oi-timer" title="Срок выполнения"></span>&nbsp;
            <span class="@ifExpired" title="@Value.СрокВыполнения">&nbsp;@Value.TimeUpString&nbsp;</span>
        </div>
        <div class="row">
            <span class="oi oi-people" title="Получатель"></span>&nbsp;
            <span class="@ifMoving" title="@Value.ОтправительПолучатель_Name">&nbsp;@Value.ОтправительПолучатель_NameString&nbsp;</span>
        </div>
        <div class="row">
            <span class="oi oi-comment-square" title="Комментарий"></span>&nbsp;
            <span title="@Value.Комментарий">&nbsp;@Value.КомментарийString&nbsp;</span>
        </div>
        <AuthorizeView Roles="Manager">
            <Authorized>
                <div class="row">
                    <span class="oi oi-basket" title="Склад"></span>&nbsp;
                    <span title="@Value.Склад_Name">&nbsp;@Value.Склад_NameString&nbsp;</span>
                </div>
            </Authorized>
        </AuthorizeView>
    </div>
</div>
-->
<span class="order shadow_my d_blk @queueType @ifExpired @ifMoving @departed">
    <span class="leftpart d_blk flt_left" title="@Value.Документ_Name">
        <span></span>
    </span>
    <span class="rightpart d_blk flt_right">
        <span class="receiver flt_left w_100">@Value.ОтправительПолучатель_NameString</span>
        <AuthorizeView Roles="Manager">
            <Authorized>
                <span class="destin flt_left w_100">@Value.Склад_NameString</span>
            </Authorized>
        </AuthorizeView>
        <span class="comment flt_left w_100">@Value.КомментарийString</span>
        <span class="date d_blk @nodisplay_timeleft">@Value.TimeUpString</span>
        <span class="date d_blk @nodisplay_timedep">@lastStatusDate</span>
        <div class="foot d_blk flt_left w_100">
            <span class="skus flt_left"><label class="val birbox">@Value.КоличествоСтрок</label></span>
            <span class="responsible @responsible">
                <label class="val birbox">
                    @resp_value
                </label>
            </span>
            <span class="weight flt_right"><label class="val birbox">@Value.Вес</label></span>
        </div>
    </span>
</span>

@code {
    [Parameter] public WhsOrderIn Value { get; set; }
    string ifExpired;
    string queueType;
    string ifMoving;
    string departed;
    string responsible;
    string resp_value;
    string lastStatusDate;
    string nodisplay_timeleft;
    string nodisplay_timedep;

    protected override void OnInitialized()
    {
        if (Value.СрокВыполнения != DateTime.Parse("01.01.0001 0:00:00"))
        {
            if (Value.СрокВыполнения > DateTime.Now)
                ifExpired = "";
            else
                ifExpired = "timeout";
        }

        ifMoving = "";
        if (Value.ЭтоПеремещение)
            ifMoving = "transfer";

        queueType = "noorder";
        if (Value.ТипОчереди == QueType.In.ForCustomer)
        { queueType = "liveq"; }
        if (Value.ТипОчереди == QueType.In.QuicklyForSale)
        { queueType = "emergency"; }
        if (Value.ТипОчереди == QueType.In.Expired)
        { queueType = "toolate"; }

        departed = "";
        nodisplay_timeleft = "";
        nodisplay_timedep = "d-none";
        if (Value.Статус == WhsOrderStatus.In.Received)
        {
            departed = "departed";
            nodisplay_timeleft = "d-none";
            nodisplay_timedep = "";
            ifExpired = "";
        }

        resp_value = "";
        responsible = "d_none";
        if (Value.Data != null && Value.Data.Count > 0)
        {
            lastStatusDate = Value.LastData?.DateTimeString;
            resp_value = Value.LastData?.ApplicationUser?.Surname;
            responsible = "";
        }
    }
}
